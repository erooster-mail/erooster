on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: Swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b
      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505
        with:
          command: check

  test:
    name: Coverage
    runs-on: ubuntu-latest
    container:
      image: rust:latest
      options: --user root
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: erooster
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e
      - name: Install Rust
        run: rustup toolchain install nightly --component llvm-tools-preview
      - uses: Swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b
      - name: Install opendkim
        run: apt update && apt install -y opendkim-tools
      - name: Generate dkim-key
        run: |
          mkdir -p /etc/erooster/keys
          cd /etc/erooster/keys
          opendkim-genkey --domain=example.com  --subdomains --testmode
      - name: Setup Config
        run: |
          echo 'tls:' > /etc/erooster/config.yml
          echo '  key_path: ""' >> /etc/erooster/config.yml
          echo '  cert_path: ""' >> /etc/erooster/config.yml
          echo 'mail:' >> /etc/erooster/config.yml
          echo '  maildir_folders: "./maildir"' >> /etc/erooster/config.yml
          echo '  hostname: "localhost"' >> /etc/erooster/config.yml
          echo '  displayname: Erooster' >> /etc/erooster/config.yml
          echo '  dkim_key_path: /etc/erooster/keys/default.private' >> /etc/erooster/config.yml
          echo '  dkim_key_selector: default' >> /etc/erooster/config.yml
          echo 'database:' >> /etc/erooster/config.yml
          echo '  postgres_url: "postgres://postgres:postgres@postgres/erooster"' >> /etc/erooster/config.yml
          echo 'webserver:' >> /etc/erooster/config.yml
          echo '  port: 80' >> /etc/erooster/config.yml
          echo '  tls: false' >> /etc/erooster/config.yml
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@5513d407a6fd2d2875c011ea47e5c2a6bff9fbf2
      - name: Generate code coverage
        run: cargo +nightly llvm-cov --all-features --workspace --html
      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: coverage-report
          path: target/llvm-cov/html/
      - name: Generate code coverage for codecov
        run: cargo +nightly llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@29386c70ef20e286228c72b668a06fd0e8399192
        with:
          files: lcov.info
          fail_ci_if_error: false

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: Swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b
      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505
        with:
          command: fmt
          args: --all -- --check
  cargo-deny:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e
      - uses: EmbarkStudios/cargo-deny-action@7257a18a9c2fe3f92b85d41ae473520dff953c97
        with:
          command: check ${{ matrix.checks }}